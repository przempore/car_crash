// Code generated by protoc-gen-go. DO NOT EDIT.
// source: car_crash.proto

package carcrash

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Rectangle_Color int32

const (
	Rectangle_Black       Rectangle_Color = 0
	Rectangle_White       Rectangle_Color = 1
	Rectangle_Red         Rectangle_Color = 2
	Rectangle_Green       Rectangle_Color = 3
	Rectangle_Blue        Rectangle_Color = 4
	Rectangle_Yellow      Rectangle_Color = 5
	Rectangle_Magenta     Rectangle_Color = 6
	Rectangle_Cyan        Rectangle_Color = 7
	Rectangle_Transparent Rectangle_Color = 8
)

var Rectangle_Color_name = map[int32]string{
	0: "Black",
	1: "White",
	2: "Red",
	3: "Green",
	4: "Blue",
	5: "Yellow",
	6: "Magenta",
	7: "Cyan",
	8: "Transparent",
}

var Rectangle_Color_value = map[string]int32{
	"Black":       0,
	"White":       1,
	"Red":         2,
	"Green":       3,
	"Blue":        4,
	"Yellow":      5,
	"Magenta":     6,
	"Cyan":        7,
	"Transparent": 8,
}

func (x Rectangle_Color) String() string {
	return proto.EnumName(Rectangle_Color_name, int32(x))
}

func (Rectangle_Color) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a11da69654d63fed, []int{2, 0}
}

type Point struct {
	X                    float32  `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float32  `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_a11da69654d63fed, []int{0}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Point) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Id struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_a11da69654d63fed, []int{1}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Rectangle struct {
	Id                   uint32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position             *Point          `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Angle                float32         `protobuf:"fixed32,3,opt,name=angle,proto3" json:"angle,omitempty"`
	Dimension            *Point          `protobuf:"bytes,4,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Color                Rectangle_Color `protobuf:"varint,5,opt,name=color,proto3,enum=carcrash.Rectangle_Color" json:"color,omitempty"`
	Origin               *Point          `protobuf:"bytes,6,opt,name=origin,proto3" json:"origin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Rectangle) Reset()         { *m = Rectangle{} }
func (m *Rectangle) String() string { return proto.CompactTextString(m) }
func (*Rectangle) ProtoMessage()    {}
func (*Rectangle) Descriptor() ([]byte, []int) {
	return fileDescriptor_a11da69654d63fed, []int{2}
}

func (m *Rectangle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rectangle.Unmarshal(m, b)
}
func (m *Rectangle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rectangle.Marshal(b, m, deterministic)
}
func (m *Rectangle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rectangle.Merge(m, src)
}
func (m *Rectangle) XXX_Size() int {
	return xxx_messageInfo_Rectangle.Size(m)
}
func (m *Rectangle) XXX_DiscardUnknown() {
	xxx_messageInfo_Rectangle.DiscardUnknown(m)
}

var xxx_messageInfo_Rectangle proto.InternalMessageInfo

func (m *Rectangle) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Rectangle) GetPosition() *Point {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Rectangle) GetAngle() float32 {
	if m != nil {
		return m.Angle
	}
	return 0
}

func (m *Rectangle) GetDimension() *Point {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (m *Rectangle) GetColor() Rectangle_Color {
	if m != nil {
		return m.Color
	}
	return Rectangle_Black
}

func (m *Rectangle) GetOrigin() *Point {
	if m != nil {
		return m.Origin
	}
	return nil
}

type Vehicles struct {
	Rectangles           []*Rectangle `protobuf:"bytes,1,rep,name=rectangles,proto3" json:"rectangles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Vehicles) Reset()         { *m = Vehicles{} }
func (m *Vehicles) String() string { return proto.CompactTextString(m) }
func (*Vehicles) ProtoMessage()    {}
func (*Vehicles) Descriptor() ([]byte, []int) {
	return fileDescriptor_a11da69654d63fed, []int{3}
}

func (m *Vehicles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vehicles.Unmarshal(m, b)
}
func (m *Vehicles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vehicles.Marshal(b, m, deterministic)
}
func (m *Vehicles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vehicles.Merge(m, src)
}
func (m *Vehicles) XXX_Size() int {
	return xxx_messageInfo_Vehicles.Size(m)
}
func (m *Vehicles) XXX_DiscardUnknown() {
	xxx_messageInfo_Vehicles.DiscardUnknown(m)
}

var xxx_messageInfo_Vehicles proto.InternalMessageInfo

func (m *Vehicles) GetRectangles() []*Rectangle {
	if m != nil {
		return m.Rectangles
	}
	return nil
}

type VehicleWithId struct {
	Id                   *Id        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rectangle            *Rectangle `protobuf:"bytes,2,opt,name=rectangle,proto3" json:"rectangle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VehicleWithId) Reset()         { *m = VehicleWithId{} }
func (m *VehicleWithId) String() string { return proto.CompactTextString(m) }
func (*VehicleWithId) ProtoMessage()    {}
func (*VehicleWithId) Descriptor() ([]byte, []int) {
	return fileDescriptor_a11da69654d63fed, []int{4}
}

func (m *VehicleWithId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleWithId.Unmarshal(m, b)
}
func (m *VehicleWithId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleWithId.Marshal(b, m, deterministic)
}
func (m *VehicleWithId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleWithId.Merge(m, src)
}
func (m *VehicleWithId) XXX_Size() int {
	return xxx_messageInfo_VehicleWithId.Size(m)
}
func (m *VehicleWithId) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleWithId.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleWithId proto.InternalMessageInfo

func (m *VehicleWithId) GetId() *Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *VehicleWithId) GetRectangle() *Rectangle {
	if m != nil {
		return m.Rectangle
	}
	return nil
}

func init() {
	proto.RegisterEnum("carcrash.Rectangle_Color", Rectangle_Color_name, Rectangle_Color_value)
	proto.RegisterType((*Point)(nil), "carcrash.Point")
	proto.RegisterType((*Id)(nil), "carcrash.Id")
	proto.RegisterType((*Rectangle)(nil), "carcrash.Rectangle")
	proto.RegisterType((*Vehicles)(nil), "carcrash.Vehicles")
	proto.RegisterType((*VehicleWithId)(nil), "carcrash.VehicleWithId")
}

func init() { proto.RegisterFile("car_crash.proto", fileDescriptor_a11da69654d63fed) }

var fileDescriptor_a11da69654d63fed = []byte{
	// 483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x63, 0x27, 0x4e, 0x9c, 0x71, 0xd3, 0x98, 0xa1, 0x02, 0x13, 0x38, 0x44, 0xe6, 0x40,
	0x24, 0x84, 0xa3, 0xba, 0x37, 0x38, 0x20, 0x25, 0x42, 0x51, 0x0e, 0x20, 0x64, 0x51, 0x2a, 0x4e,
	0xb0, 0xb5, 0x07, 0x67, 0x85, 0xbb, 0x1b, 0xad, 0xb7, 0x6a, 0xf3, 0x52, 0x3c, 0x0f, 0x8f, 0x83,
	0xbc, 0xce, 0x1f, 0x1a, 0x52, 0xf5, 0xb6, 0x33, 0xfb, 0xfb, 0xbe, 0x99, 0xd1, 0x0c, 0xf4, 0x53,
	0xa6, 0xbe, 0xa7, 0x8a, 0x95, 0x8b, 0x68, 0xa9, 0xa4, 0x96, 0xe8, 0xa6, 0x4c, 0x99, 0x78, 0xf0,
	0x3c, 0x97, 0x32, 0x2f, 0x68, 0x6c, 0xf2, 0x97, 0xd7, 0x3f, 0xc7, 0x74, 0xb5, 0xd4, 0xab, 0x1a,
	0x0b, 0x5f, 0x82, 0xf3, 0x59, 0x72, 0xa1, 0xf1, 0x08, 0xac, 0xdb, 0xc0, 0x1a, 0x5a, 0x23, 0x3b,
	0xb1, 0x6e, 0xab, 0x68, 0x15, 0xd8, 0x75, 0xb4, 0x0a, 0x4f, 0xc0, 0x9e, 0x67, 0x78, 0x0c, 0x36,
	0xcf, 0x0c, 0xd2, 0x4b, 0x6c, 0x9e, 0x85, 0x7f, 0x6c, 0xe8, 0x26, 0x94, 0x6a, 0x26, 0xf2, 0x82,
	0xf6, 0x7f, 0xf1, 0x35, 0xb8, 0x4b, 0x59, 0x72, 0xcd, 0xa5, 0x30, 0x46, 0x5e, 0xdc, 0x8f, 0x36,
	0x2d, 0x45, 0xa6, 0x64, 0xb2, 0x05, 0xf0, 0x04, 0x1c, 0xe3, 0x12, 0x34, 0x4d, 0xc9, 0x3a, 0xc0,
	0x37, 0xd0, 0xcd, 0xf8, 0x15, 0x89, 0xb2, 0xf2, 0x68, 0x1d, 0xf6, 0xd8, 0x11, 0x38, 0x06, 0x27,
	0x95, 0x85, 0x54, 0x81, 0x33, 0xb4, 0x46, 0xc7, 0xf1, 0xb3, 0x1d, 0xba, 0xed, 0x32, 0x9a, 0x56,
	0x40, 0x52, 0x73, 0xf8, 0x0a, 0xda, 0x52, 0xf1, 0x9c, 0x8b, 0xa0, 0x7d, 0xd8, 0x7c, 0xfd, 0x1d,
	0x4a, 0x70, 0x8c, 0x10, 0xbb, 0xe0, 0x4c, 0x0a, 0x96, 0xfe, 0xf2, 0x1b, 0xd5, 0xf3, 0x62, 0xc1,
	0x35, 0xf9, 0x16, 0x76, 0xa0, 0x99, 0x50, 0xe6, 0xdb, 0x55, 0x6e, 0xa6, 0x88, 0x84, 0xdf, 0x44,
	0x17, 0x5a, 0x93, 0xe2, 0x9a, 0xfc, 0x16, 0x02, 0xb4, 0xbf, 0x51, 0x51, 0xc8, 0x1b, 0xdf, 0x41,
	0x0f, 0x3a, 0x1f, 0x59, 0x4e, 0x42, 0x33, 0xbf, 0x5d, 0x21, 0xd3, 0x15, 0x13, 0x7e, 0x07, 0xfb,
	0xe0, 0x7d, 0x51, 0x4c, 0x94, 0x4b, 0xa6, 0x48, 0x68, 0xdf, 0x0d, 0xdf, 0x83, 0xfb, 0x95, 0x16,
	0x3c, 0x2d, 0xa8, 0xc4, 0x33, 0x00, 0xb5, 0xe9, 0xbf, 0x0c, 0xac, 0x61, 0x73, 0xe4, 0xc5, 0x8f,
	0x0f, 0xcc, 0x96, 0xfc, 0x83, 0x85, 0x3f, 0xa0, 0xb7, 0x36, 0xb8, 0xe0, 0x7a, 0x31, 0xcf, 0xf0,
	0xc5, 0x76, 0x3d, 0x5e, 0x7c, 0xb4, 0x53, 0xcf, 0x33, 0xb3, 0xac, 0x53, 0xe8, 0x6e, 0xc5, 0xeb,
	0x6d, 0x1d, 0x2c, 0xb1, 0xa3, 0xe2, 0xdf, 0x36, 0xb8, 0x53, 0xa6, 0xa6, 0x15, 0x81, 0x31, 0xb8,
	0x33, 0xd2, 0x9f, 0xe8, 0x66, 0x9e, 0xe1, 0x93, 0xa8, 0xbe, 0xb7, 0x68, 0x73, 0x6f, 0xd1, 0x87,
	0xea, 0xde, 0x06, 0x77, 0xaa, 0x86, 0x0d, 0x7c, 0x07, 0xde, 0x8c, 0xf4, 0x76, 0xcc, 0xfb, 0x64,
	0xb8, 0x93, 0x6d, 0xd8, 0xb0, 0x81, 0x13, 0xe8, 0x9d, 0x2f, 0x33, 0xa6, 0x69, 0x9d, 0xc3, 0xa7,
	0xff, 0x61, 0xf5, 0xe0, 0x83, 0x7b, 0x7c, 0xc3, 0x06, 0xbe, 0x85, 0x7e, 0x42, 0x39, 0x2f, 0x35,
	0xa9, 0x07, 0x5d, 0xf6, 0x9b, 0x3f, 0x85, 0x47, 0xe7, 0x42, 0xed, 0xa9, 0xef, 0x40, 0xfb, 0x92,
	0xcb, 0xb6, 0x69, 0xe0, 0xec, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x77, 0xf3, 0xd2, 0x03, 0xaa,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CarCrashClient is the client API for CarCrash service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CarCrashClient interface {
	GetNewId(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Id, error)
	GetVehicles(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Vehicles, error)
	UpdateVehicle(ctx context.Context, in *VehicleWithId, opts ...grpc.CallOption) (*empty.Empty, error)
	RegisterVehicle(ctx context.Context, in *VehicleWithId, opts ...grpc.CallOption) (*Id, error)
	UnregisterVehicle(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Id, error)
}

type carCrashClient struct {
	cc *grpc.ClientConn
}

func NewCarCrashClient(cc *grpc.ClientConn) CarCrashClient {
	return &carCrashClient{cc}
}

func (c *carCrashClient) GetNewId(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Id, error) {
	out := new(Id)
	err := c.cc.Invoke(ctx, "/carcrash.CarCrash/GetNewId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carCrashClient) GetVehicles(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Vehicles, error) {
	out := new(Vehicles)
	err := c.cc.Invoke(ctx, "/carcrash.CarCrash/GetVehicles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carCrashClient) UpdateVehicle(ctx context.Context, in *VehicleWithId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/carcrash.CarCrash/UpdateVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carCrashClient) RegisterVehicle(ctx context.Context, in *VehicleWithId, opts ...grpc.CallOption) (*Id, error) {
	out := new(Id)
	err := c.cc.Invoke(ctx, "/carcrash.CarCrash/RegisterVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carCrashClient) UnregisterVehicle(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Id, error) {
	out := new(Id)
	err := c.cc.Invoke(ctx, "/carcrash.CarCrash/UnregisterVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CarCrashServer is the server API for CarCrash service.
type CarCrashServer interface {
	GetNewId(context.Context, *empty.Empty) (*Id, error)
	GetVehicles(context.Context, *empty.Empty) (*Vehicles, error)
	UpdateVehicle(context.Context, *VehicleWithId) (*empty.Empty, error)
	RegisterVehicle(context.Context, *VehicleWithId) (*Id, error)
	UnregisterVehicle(context.Context, *Id) (*Id, error)
}

// UnimplementedCarCrashServer can be embedded to have forward compatible implementations.
type UnimplementedCarCrashServer struct {
}

func (*UnimplementedCarCrashServer) GetNewId(ctx context.Context, req *empty.Empty) (*Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNewId not implemented")
}
func (*UnimplementedCarCrashServer) GetVehicles(ctx context.Context, req *empty.Empty) (*Vehicles, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVehicles not implemented")
}
func (*UnimplementedCarCrashServer) UpdateVehicle(ctx context.Context, req *VehicleWithId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVehicle not implemented")
}
func (*UnimplementedCarCrashServer) RegisterVehicle(ctx context.Context, req *VehicleWithId) (*Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterVehicle not implemented")
}
func (*UnimplementedCarCrashServer) UnregisterVehicle(ctx context.Context, req *Id) (*Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnregisterVehicle not implemented")
}

func RegisterCarCrashServer(s *grpc.Server, srv CarCrashServer) {
	s.RegisterService(&_CarCrash_serviceDesc, srv)
}

func _CarCrash_GetNewId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarCrashServer).GetNewId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carcrash.CarCrash/GetNewId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarCrashServer).GetNewId(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarCrash_GetVehicles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarCrashServer).GetVehicles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carcrash.CarCrash/GetVehicles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarCrashServer).GetVehicles(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarCrash_UpdateVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VehicleWithId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarCrashServer).UpdateVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carcrash.CarCrash/UpdateVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarCrashServer).UpdateVehicle(ctx, req.(*VehicleWithId))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarCrash_RegisterVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VehicleWithId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarCrashServer).RegisterVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carcrash.CarCrash/RegisterVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarCrashServer).RegisterVehicle(ctx, req.(*VehicleWithId))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarCrash_UnregisterVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarCrashServer).UnregisterVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carcrash.CarCrash/UnregisterVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarCrashServer).UnregisterVehicle(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

var _CarCrash_serviceDesc = grpc.ServiceDesc{
	ServiceName: "carcrash.CarCrash",
	HandlerType: (*CarCrashServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNewId",
			Handler:    _CarCrash_GetNewId_Handler,
		},
		{
			MethodName: "GetVehicles",
			Handler:    _CarCrash_GetVehicles_Handler,
		},
		{
			MethodName: "UpdateVehicle",
			Handler:    _CarCrash_UpdateVehicle_Handler,
		},
		{
			MethodName: "RegisterVehicle",
			Handler:    _CarCrash_RegisterVehicle_Handler,
		},
		{
			MethodName: "UnregisterVehicle",
			Handler:    _CarCrash_UnregisterVehicle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "car_crash.proto",
}
